<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.infrastructure.dao.order.InstFeedbackMapper" >
  <resultMap id="InstFeedbackResultMap" type="com.infrastructure.entity.order.InstFeedback" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="instId" property="instid" jdbcType="VARCHAR" />
    <result column="fcontent" property="fcontent" jdbcType="VARCHAR" />
    <result property="createtime" column="createTime" jdbcType="TIMESTAMP"></result>
    <result column="userId" property="userid" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, instId, fcontent, createTime, userId
  </sql>

  <!--新增反馈-->
  <insert id="insert" parameterType="com.infrastructure.entity.order.InstFeedback" >
    insert into inst_feedback (id, instId, fcontent, 
      createTime, userId)
    values (#{id,jdbcType=VARCHAR}, #{instid,jdbcType=VARCHAR}, #{fcontent,jdbcType=VARCHAR}, 
      SYSDATE(), #{userid,jdbcType=VARCHAR})
  </insert>

  <!--修改反馈-->
  <update id="update" parameterType="com.infrastructure.entity.order.InstFeedback" >
    update inst_feedback
    <set >
      <if test="instid != null" >
        instId = #{instid,jdbcType=VARCHAR},
      </if>
      <if test="fcontent != null" >
        fcontent = #{fcontent,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id, javaType=string}
  </update>

  <!--批量回馈-->
  <delete id="deleteBatch">
    DELETE FROM inst_feedback WHERE instid IN
    <foreach collection="array" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>

  <!-- 查找回馈 -->
  <select id="queryList" resultMap="InstFeedbackResultMap" resultType="com.infrastructure.entity.order.InstFeedback">
    SELECT
    c.id,
    c.instId,
    c.fcontent,
    c.createTime,
    c.userId,
    u.username user_name
    FROM
    inst_feedback c
    INNER JOIN sys_user u
    ON c.userId = u.id
    INNER JOIN instructions i ON i.id = c.instId
    WHERE 1 = 1 ${where}
  </select>

  <!-- 获取回馈 -->
  <select id="getById" resultMap="InstFeedbackResultMap" parameterType="java.lang.String">
    SELECT
    c.id,
    c.instId,
    c.fcontent,
    c.createTime,
    c.userId,
    u.username user_name
    FROM
    inst_feedback c
    INNER JOIN sys_user u
    ON c.userId = u.id
    INNER JOIN instructions i ON i.id = c.instId
    <where>
      c.id = #{id, javaType=string}
    </where>
  </select>
</mapper>